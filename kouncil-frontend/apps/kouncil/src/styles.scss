@use '@angular/material' as mat;
@use 'styles/palette' as pallete;
@use 'styles/buttons' as buttons;
@import 'styles/ngx';
@import 'styles/material';

@include mat.core();

$kouncil-primary: mat.m2-define-palette(pallete.$palette-main);
$kouncil-accent: mat.m2-define-palette(pallete.$palette-accent);
$kouncil-warn: mat.m2-define-palette(pallete.$palette-warn);

$kouncil-theme: mat.m2-define-light-theme((
  color: (
    primary: $kouncil-primary,
    accent: $kouncil-accent,
    warn: $kouncil-warn,
  )
));

@include mat.all-component-themes($kouncil-theme);

$custom-typography: mat.m2-define-typography-config(
  $font-family: 'Inter, normal'
);
@include mat.typography-hierarchy($custom-typography);
@include mat.all-component-typographies($custom-typography);

html, body {
  height: 100%;
  margin: 0;
  background-color: pallete.$main-10;
  font-family: 'Inter' !important;
  min-width: 1440px;
}

.cdk-global-scrollblock {
  overflow-y: auto;
}

.spacer {
  flex: 1 1 auto;
}

.kafka-progress {
  position: absolute;
  left: calc(50% - 60px);
  top: calc(50% - 60px);
  z-index: 1;
  border: 16px solid pallete.$main-20;
  border-top: 16px solid pallete.$main-60;
  border-radius: 50%;
  width: 120px;
  height: 120px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.row-dlq {
  td {
    color: darkred !important;
    font-style: italic;
  }
}

.row-retry {
  td {
    color: darkorange !important;
    font-style: italic;
  }
}

.kafka-desktop {
  height: calc(100% - 72px);
  display: flex;
}

.kafka-desktop-banner {
  height: calc(100% - 120px);
  display: flex;
}

.kafka-desktop-demo {
  height: calc(100% - 120px);
  display: flex;
}
